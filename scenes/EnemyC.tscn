[gd_scene load_steps=9 format=2]

[ext_resource path="res://textures/enemy_t.png" type="Texture" id=1]
[ext_resource path="res://sounds/shot.wav" type="AudioStream" id=2]
[ext_resource path="res://scenes/Shot.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/Nani.tscn" type="PackedScene" id=4]
[ext_resource path="res://sounds/alert.wav" type="AudioStream" id=5]

[sub_resource type="GDScript" id=4]
script/source = "extends Area2D

export var ps_nani: PackedScene
export var ps_shot: PackedScene
export var speed: float = 125.0


const lag = 0.18
const reload_t = 0.3

var player: Node2D
var angle = 0.0
var mask_stack = 0
var tlag = lag
var fl_p_hidden = true
var timer = 0
var reload = reload_t
var tst = 0.1

func _process(delta):
	
	if tst >= 0.0:
		tst -=delta
		return
	if not player.is_hidden() or is_in_mask(): # and not is_in_mask():
		tlag -= delta
	else:
		tlag = lag
		reload = reload_t
	
	if fl_p_hidden and (not player.is_hidden() or is_in_mask()):
		fl_p_hidden = false
		spawn_nani()
	elif not fl_p_hidden and not (not player.is_hidden() or is_in_mask()):
		fl_p_hidden = true
		
	if tlag < 0:
		reload -= delta
		angle = position.angle_to_point(player.position)
		$Sprites.rotation = angle - PI/2
		
	if reload <= 0:
		shoot()
		reload = reload_t
	
	update()
	timer += delta
	

func _draw():
	if not fl_p_hidden:
		var prev_r = rand_range(-0.01, 0.01)
		var current_r = rand_range(-0.01, 0.01)
		for i in range(30):
			draw_line(
				Vector2(i * 40 * cos(angle + PI + prev_r), i * 40 * sin(angle + PI+ prev_r)),
				Vector2((i+1) * 40 * cos(angle + PI + current_r), (i+1) * 40 * sin(angle + PI + current_r)),
				Color(1.0, 0.0, 0.0, 0.2),
				2.0
			)
			
			prev_r = current_r
			current_r = rand_range(-0.01, 0.01)


func _on_Enemy_area_entered(area: Area2D):
	if area.is_in_group(\"player\"):
		pass
	elif area.is_in_group(\"mask\"):
		mask_stack += 1


func _on_Enemy_area_exited(area):
	if area.is_in_group(\"player\"):
		pass
	elif area.is_in_group(\"mask\"):
		mask_stack -= 1
		

func is_in_mask():
	return mask_stack > 0


func spawn_nani():
	var instance = ps_nani.instance()
	instance.position = Vector2(0, -32)
	add_child(instance)
	$Nani.play()
	
	
func kill():
	set_process(false)
	hide()
	

func shoot():
	var instance = ps_shot.instance()
	instance.angle = $Sprites.rotation
	instance.speed = speed
	instance.global_position = global_position
	get_node(\"/root/Root/GameManager\").get_child(0).add_child(instance)
	$Shot.play()
"

[sub_resource type="CircleShape2D" id=3]
radius = 7.0

[sub_resource type="CanvasItemMaterial" id=2]

[node name="Enemy" type="Area2D" groups=["enemy"]]
collision_layer = 4
collision_mask = 3
script = SubResource( 4 )
ps_nani = ExtResource( 4 )
ps_shot = ExtResource( 3 )
speed = 300.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 3 )

[node name="Sprites" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="Sprites"]
material = SubResource( 2 )
texture = ExtResource( 1 )

[node name="Shot" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[node name="Nani" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

[connection signal="area_entered" from="." to="." method="_on_Enemy_area_entered"]
[connection signal="area_exited" from="." to="." method="_on_Enemy_area_exited"]
